#!/bin/bash

GENERATED_DIR="__generated__"
CONVERGE_DELAY=30

NORMAL=$(tput sgr0)
RED=$(tput setaf 1)
BLUE=$(tput setaf 4)
BEEP=$(tput bel)

FALSE=0
TRUE=1

CHECK_AGAIN=${FALSE}
CLEAN=${FALSE}
RESUME=${FALSE}

fatal_error ()
{
    message="$1"
    echo "${RED}Error:${NORMAL} ${message}"
    exit 1
}

progress ()
{
    message="$1"
    echo "${BLUE}*** ${message} ***${NORMAL}"

}

help ()
{
    echo
    echo "SYNOPSIS"
    echo
    echo "    chaos-test-suite [-?|-h|--help]"
    echo "                     [-a|--check-again]"
    echo "                     [-c|--clean]"
    echo "                     [-r|--resume]"
    echo
    echo "OPTIONS"
    echo
    echo "  -?, -h, --help"
    echo "      Print this help and exit"
    echo
    echo "  -a, --check-again"
    echo "      Run the convergence check again after an interrupted run"
    echo
    echo "  -c, --clean"
    echo "      Clean all temporary files and ${GENERATED_DIR} directory from previous run"
    echo
    echo "  -r, --resume"
    echo "      Resume the previously interrupted run"
    echo
    exit 0
}

parse_command_line_options ()
{
    while [[ "$#" -gt 0 ]]; do
        case $1 in
            -a|--check-again) CHECK_AGAIN=${TRUE} ;;
            -c|--clean) CLEAN=${TRUE} ;;
            -?|-h|--help) help ;;
            -r|--resume) RESUME=${TRUE} ;;
            *) echo "Unknown parameter passed: $1"; exit 1 ;;
        esac
        shift
    done
}

check_running_in_virtual_environment ()
{
    if [[ -z "${VIRTUAL_ENV}" ]]; then
        fatal_error "Virtual environment not activated"
    fi
}

clean ()
{
    cd ${VIRTUAL_ENV}/..
    if [[ -e ${GENERATED_DIR} ]]; then
        progress "Stopping previous run of topology"
        ${GENERATED_DIR}/stop.sh
    fi
    progress "Cleaning previous run scripts and temporary files"
    tools/cleanup
    rm -rf ${GENERATED_DIR}
}

check_previous_run ()
{
    if [[ -e ${GENERATED_DIR} ]]; then
        fatal_error "Directory ${GENERATED_DIR} still exists from a previous run; clean it up first"
    fi
}

generate_scripts ()
{
    progress "Generating scipts in ${GENERATED_DIR}"
    tools/config_generator.py -n meta_topology/clos_3plane_3pod_3leaf_3spine_6super.yaml \
    ${GENERATED_DIR}
}

start_topology ()
{
    progress "Starting topology"
    ${GENERATED_DIR}/start.sh
}

let_converge ()
{
    progress "Letting converge for ${CONVERGE_DELAY} seconds"
    sleep ${CONVERGE_DELAY}
}

check_convergence ()
{
    progress "Checking convergence"
    tools/config_generator.py -c -n meta_topology/clos_3plane_3pod_3leaf_3spine_6super.yaml \
        ${GENERATED_DIR}
    if [ $? -ne 0 ]; then
        echo ${BEEP} ${BEEP} ${BEEP} ${BEEP} ${BEEP} ${BEEP} 
        fatal_error "One more checks failed after convergence"
    fi
}

wreak_chaos ()
{
    progress "Wreaking chaos"
    ${GENERATED_DIR}/chaos.sh
}

parse_command_line_options $@
check_running_in_virtual_environment
if [[ ${CHECK_AGAIN} == ${TRUE} ]]; then
    check_convergence
    exit 0
fi
if [[ ${RESUME} == ${FALSE} ]]; then
    if [[ ${CLEAN} == ${TRUE} ]]; then
        clean
    fi
    check_previous_run
    generate_scripts
    start_topology
    let_converge
fi
while true; do
    check_convergence
    wreak_chaos
    let_converge
done

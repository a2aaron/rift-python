#!/bin/bash

GENERATED_DIR="__generated__"
CONVERGE_DELAY=30

NORMAL=$(tput sgr0)
RED=$(tput setaf 1)
BLUE=$(tput setaf 4)
BEEP=$(tput bel)

fatal_error ()
{
    message="$1"
    echo "${RED}Error:${NORMAL} ${message}"
    exit 1
}

progress ()
{
    message="$1"
    echo "${BLUE}*** ${message} ***${NORMAL}"

}

check_running_in_virtual_environment ()
{
    if [[ -z "${VIRTUAL_ENV}" ]]; then
        fatal_error "Virtual environment not activated"
    fi
}

check_previous_run ()
{
    if [[ -e ${GENERATED_DIR} ]]; then
        fatal_error "Directory ${GENERATED_DIR} still exists from a previous run; clean it up first"
    fi
}

cleanup_temporary_files ()
{
    cd ${VIRTUAL_ENV}/..
    tools/cleanup
}

generate_scripts ()
{
    progress "Generating scipts in ${GENERATED_DIR}"
    tools/config_generator.py -n meta_topology/clos_3plane_3pod_3leaf_3spine_6super.yaml \
    ${GENERATED_DIR}
}

start_topology ()
{
    progress "Starting topology"
    ${GENERATED_DIR}/start.sh
}

let_converge ()
{
    progress "Letting converge for ${CONVERGE_DELAY} seconds"
    sleep ${CONVERGE_DELAY}
}

check_convergence ()
{
    progress "Checking convergence"
    tools/config_generator.py -c -n meta_topology/clos_3plane_3pod_3leaf_3spine_6super.yaml \
        ${GENERATED_DIR}
    if [ $? -ne 0 ]; then
        echo ${BEEP} ${BEEP} ${BEEP} ${BEEP} ${BEEP} ${BEEP} 
        fatal_error "One more checks failed after convergence"
    fi
}

wreak_chaos ()
{
    progress "Wreaking chaos"
    ${GENERATED_DIR}/chaos.sh
}

check_running_in_virtual_environment
check_previous_run
cleanup_temporary_files
generate_scripts
start_topology
while true; do
    let_converge
    check_convergence
    wreak_chaos
done

#!/bin/bash

# Make sure we are running in a virtual environment so that all the pytools work
if [[ -z "${VIRTUAL_ENV}" ]]; then
  echo "Virtual environment not activated"
  exit 1
fi

# Increase number of file descriptors
case "$(uname -s)" in
   Darwin)
     echo 'macOS: increase number of file descriptors to 1024'
     ulimit -S -n 1024
     ;;
   Linux)
     echo 'Linux: increase number of file descriptors to 1024'
     ulimit -S -n 1024
     ;;
   *)
     echo 'Unknown OS'
     ;;
esac

# Clean up temporary files
cd ${VIRTUAL_ENV}/..
tools/cleanup

# Lint rift directory
echo "Linting rift directory..."
if ! pylint rift ; then
    echo "*** DO NOT COMMIT ***"
    echo "Fix lint errors for rift directory (score must be perfect 10.0)"
    exit 1
fi

# Lint tests directory
echo "Linting tests directory..."
if ! pylint tests ; then
    echo "*** DO NOT COMMIT ***"
    echo "Fix lint errors for tests directory (score must be perfect 10.0)"
    exit 1
fi

# Lint tools directory
echo "Linting tools directory..."
if ! pylint tools ; then
    echo "*** DO NOT COMMIT ***"
    echo "Fix lint errors for tools directory (score must be perfect 10.0)"
    exit 1
fi

# Run unit tests, system tests, and collect code coverage results
# On macOS, exclude tests with __large__ in their name (they need more resources than a laptop has)
if [[ "$(uname -s)" == "Darwin" ]]; then
    if ! pytest --cov -k 'not __large__' tests ; then
        echo "*** DO NOT COMMIT ***"
        echo "Fix unit tests and/or system tests (all tests must pass)"
        exit 1
    fi
fi

# Check documentation for completeness
if ! tools/update_cli_docs.py -c; then 
    echo "*** DO NOT COMMIT ***"
    echo "Add missing documentation"
    exit 1
fi

echo "All good; you can commit."
